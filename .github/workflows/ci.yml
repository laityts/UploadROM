name: UploadROM

on:
  workflow_dispatch:
     inputs:
       mode:
         description: 'Download mode(aria2c,curl,axel,wget)'
         required: true
         default: 'aria2c'
       output:
         description: 'Output(wget=O)'
         required: true
         default: 'o'
       filename:
         description: 'ROM NAME'
         default: ''
       filelink:
         description: 'ROM LINK'
         required: true
       rom:
         description: 'Upload path'
         required: true
         default: 'PixelExperience'
       sf:
         description: 'Upload ROM to Sourceforge'
         required: true
         default: 'false'

jobs:
  UploadROM:
    runs-on: ubuntu-20.04
    continue-on-error: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Initialization environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y git wget curl aria2 python python3 unzip axel sshpass openssh-server

      - id: var
        name: Download
        run: |
          echo "Download"
          if [[ ${{ github.event.inputs.filelink }} == *"drive.google.com"* ]]; then
              if [[ ${{ github.event.inputs.filelink }} == *"file"* ]]; then
                  DOWNLOAD_LINK=$(echo ${{ github.event.inputs.filelink }} | cut -d / -f 6)
                  echo "DOWNLOAD_LINK: $DOWNLOAD_LINK"
                  gdown https://drive.google.com/uc?id=${DOWNLOAD_LINK}
              elif [[ ${{ github.event.inputs.filelink }} == *"id"* ]]; then
                  DOWNLOAD_LINK1=$(echo ${{ github.event.inputs.filelink }} | cut -d = -f 2 | cut -d '&' -f 1)
                  DOWNLOAD_LINK2=$(echo ${{ github.event.inputs.filelink }} | cut -d = -f 4)
                  echo "DOWNLOAD_LINK1: $DOWNLOAD_LINK1"
                  echo "DOWNLOAD_LINK2: $DOWNLOAD_LINK2"
                  gdown https://drive.google.com/uc?id=${DOWNLOAD_LINK1} || gdown https://drive.google.com/uc?id=${DOWNLOAD_LINK2}
              fi
          else
              if [[ ! -z "${{ github.event.inputs.filename }}" ]]; then
                  FILENAME="${{ github.event.inputs.filename }}"
                  ${{ github.event.inputs.mode }} ${{ github.event.inputs.filelink }} -${{ github.event.inputs.output }} "$FILENAME"
              else
                  ${{ github.event.inputs.mode }} ${{ github.event.inputs.filelink }}
              fi
          fi
          ls
          FILENAME="$(ls -lS * | head -1 | awk '{print $9}')"
          echo "FILENAME: $FILENAME"
          FILENAME=$(basename ${FILENAME})
          NAME=$(basename $FILENAME .zip)
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "filename=$FILENAME" >> $GITHUB_OUTPUT
          MD5SUM=$(md5sum $FILENAME | cut -d' ' -f1)
          SHA1SUM=$(sha1sum $FILENAME | cut -d' ' -f1)
          SHA256SUM=$(sha256sum $FILENAME | cut -d' ' -f1)
          echo "MD5SUM: $MD5SUM"
          echo "SHA1SUM: $SHA1SUM"
          echo "SHA256SUM: $SHA256SUM"

      - name: Upload ROM to Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.var.outputs.filename }}
          name: ${{ steps.var.outputs.name }}
          tag_name: ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE }}

      - name: Upload to Sourceforge
        if: github.event.inputs.sf == 'true'
        continue-on-error: true
        timeout-minutes: 5
        run: |
          echo "Upload to Sourceforge"
          ls -al
          sshpass -p "${{ secrets.PASSWD }}" scp -o StrictHostKeyChecking=no -o ConnectTimeout=180 ${{ steps.var.outputs.filename }} laityts@frs.sourceforge.net:/home/frs/project/tiffany/${{ github.event.inputs.rom }}/${{ steps.var.outputs.filename }}
          echo "Download Link: https://sourceforge.net/projects/tiffany/files/${{ github.event.inputs.rom }}/${{ steps.var.outputs.filename }}/download"
          SFLINK="https://sourceforge.net/projects/tiffany/files/${{ github.event.inputs.rom }}/${{ steps.var.outputs.filename }}/download"
          echo "Sourceforge: $SFLINK"


